% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Accumulation.R
\name{EntAccum}
\alias{EntAccum}
\title{Entropy Accumulation}
\usage{
EntAccum(spCommunity, q.seq = seq(0, 2, by = 0.1), divCorrection = "None",
  n.seq = 1:ceiling(spCommunity$n/2), r.seq = NULL, spCorrection = "None",
  Individual = FALSE, ShowProgressBar = TRUE, CheckArguments = TRUE)
}
\arguments{
\item{spCommunity}{A spatialized community (An object of class "wmppp" (\code{\link{wmppp.object}}), with \code{PointType} values as species names.)}

\item{q.seq}{A numeric vector: the sequence of diversity orders to address. Default is from 0 to 2.}

\item{divCorrection}{A string containing one of the possible corrections to calculate diversity, see \code{\link{Tsallis}} for all possible values. \code{"None"} uses the plugin estimator. \code{"Best"} is the default value.}

\item{n.seq}{A vector of integers. Entropy will be accumulated along this number of neighbors around each individual. Default is 10\% of the individuals.}

\item{r.seq}{A vector of distances. If \code{NULL} accumulation is along \code{n}, else neighbors are accumulated in circles of radius \code{r}.}

\item{spCorrection}{The edge-effect correction to apply when estimating the entropy of a neighborhood community that does not fit in the window. 
Does not apply if neihborhoods are defined by the number of neighbors. Default is "None".}

\item{Individual}{If `TRUE`, individual neighborhood entropies are returned.}

\item{ShowProgressBar}{If `TRUE` (default), a progress bar is shown.}

\item{CheckArguments}{If `TRUE` (default), the function arguments are verified. Should be set to \code{FALSE} to save time in simulations for example, when the arguments have been checked elsewhere.}
}
\value{
An "Accumulation" object that is a 3-D array containing average entropy.
The third dimension of the array is only of length 1: it contains observed entropy.
The first two dimensions are respectively for $q$ values and the number of points of the neighborhood, starting from 1 (the point itself, with no neighbor).
}
\description{
Entropy Accumulation
}
\examples{
# Generate a random community
spCommunity <- rSpCommunity(1, size=50, S=3)
# Calculate the accumulation of Shannon entropy 
accum <- EntAccum(spCommunity, q.seq=1)
plot(accum, q=1)
# along distance
accumR <- EntAccum(spCommunity, q.seq=1, r.seq=seq(0, .5, .05))
plot(accumR, q=1)

}
